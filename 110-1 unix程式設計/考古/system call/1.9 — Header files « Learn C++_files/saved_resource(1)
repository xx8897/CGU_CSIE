
function MTagGen() {
	getParameter = function(name, defaultValue) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
	if (defaultValue == undefined)		
	  defaultValue = "";
		
    return results === null ? defaultValue : decodeURIComponent(results[1].replace(/\+/g, " "));
}

writeHTML = function(html) {
	document.write(html);
}

addPixel = function(pixelURL) {
	var oImg = document.createElement("img");
	oImg.setAttribute('src', pixelURL);
}

isMobile = function() {
  var check = false;
  (function(a,b){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
  return check;
}
	adUnits = {"fd7e874d-022a-4953-9199-9b1820e8704b":{"impressionsURL":"//p.pxl2015x1.com/pixel/?id\u003dfd7e874d-022a-4953-9199-9b1820e8704b\u0026tid\u003d0f87cea4-60c3-4f44-9181-5dcafa9b08ab\u0026pub\u003de9d8a2b8-3361-11e5-aa89-c6471388719e","domain":"admtpmp123","html":"\u003cscript type\u003d\u0027text/javascript\u0027\u003e\r\nvar adParams \u003d {a: \u002760701183\u0027, context:\u0027c61721343\u0027, SOURCEURL: \u0027{{sourceURL}}\u0027, size: \u0027{{width}}x{{height}}\u0027,serverdomain: \u0027s.admtpmp123.com\u0027, mattrackingid: \u00270f87cea4-60c3-4f44-9181-5dcafa9b08ab,fd7e874d-022a-4953-9199-9b1820e8704b,{{timeStamp}}\u0027, ptitle: \u0027{{pageTitle}}\u0027, adclickurl: \u0027{{clickURL}}\u0027, adclickthrough: \u0027{{clickThroughURL}}\u0027 };\r\n\u003c/script\u003e\r\n\u003cscript type\u003d\u0027text/javascript\u0027 src\u003d\u0027//creative.admtpmp123.com/admtpmp123/scripts/smart/smart.js\u0027\u003e\u003c/script\u003e\r\n","width":"160","height":"600"},"ff168902-291c-4d5f-8b10-8f590925ed4b":{"impressionsURL":"//p.pxl2015x1.com/pixel/?id\u003dff168902-291c-4d5f-8b10-8f590925ed4b\u0026tid\u003d0f87cea4-60c3-4f44-9181-5dcafa9b08ab\u0026pub\u003de9d8a2b8-3361-11e5-aa89-c6471388719e","domain":"admtpmp124","html":"\u003cscript type\u003d\u0027text/javascript\u0027\u003e\r\nvar adParams \u003d {p: \u002770271294\u0027, psid: \u0027{{sourceURL}}\u0027, size: \u0027{{width}}x{{height}}\u0027,serverdomain: \u0027admtpmp124\u0027, mattrackingid: \u00270f87cea4-60c3-4f44-9181-5dcafa9b08ab,ff168902-291c-4d5f-8b10-8f590925ed4b,{{timeStamp}}\u0027, ptitle: \u0027{{pageTitle}}\u0027, adclickurl: \u0027{{clickURL}}\u0027, adclickthrough: \u0027{{clickThroughURL}}\u0027 };\r\n\u003c/script\u003e\r\n\u003cscript type\u003d\u0027text/javascript\u0027 src\u003d\u0027//creative.admtpmp124.com/admtpmp124/tags/xbanner/xbanner.js?ap\u003d1300\u0027\u003e\u003c/script\u003e\r\n","width":"160","height":"600"}};
	
	timeStamp = (new Date()).getTime();
	
			SCORE_NONE	 					 		= 0;
SCORE_MATCH						 		= 1;
SCORE_NO_MATCH 					 		= -100;
NO_LEVEL_SET							= 100;
TAG_IMPRESSIONS_COOKIE_NAME      		= "tm_imp_79f5cc";
TAG_IMPRESSIONS_EXP_DATE_COOKIE_NAME 	= TAG_IMPRESSIONS_COOKIE_NAME + "_expireDate";

rules = [{"ruleUUID":"1626f1e7-c7c1-47f7-8609-2b19bde9d537","platform":"Both","percentage":100,"countries":[],"includeCountries":true,"visibleFrom":0,"visibleTo":0,"level":0,"matchingAdUnits":["ff168902-291c-4d5f-8b10-8f590925ed4b"]}];

chooseAdUnit = function(choiceInfo) {	
	var userInfo = { platform : isMobile() ? "Mobile" : "Web",
					 country: 'TW',
					 impressions: getImpressions()};
	
	return processUserInfo(choiceInfo, userInfo); 
}

processUserInfo = function(choiceInfo, userInfo) {
	var matchingRules = getMatchingRules(userInfo);
	
	if (matchingRules.length == 0) {
		return choiceInfo;
	}
	
	console.log("TM rules matching: " + matchingRules.length);
	var chosenRule = getHighestScoreRule(matchingRules);

	if (chosenRule != null) {
		choiceInfo.adUnitUUID  = getMatchingAdUnit(chosenRule);
		choiceInfo.ruleUUID    = chosenRule.ruleUUID;
	}

	return choiceInfo;
}

getMatchingAdUnit = function(rule){
	if (rule.matchingAdUnits.length == 1)
		return rule.matchingAdUnits[0];	
		
	var randomIndex = Math.floor(Math.random() * rule.matchingAdUnits.length);
	return rule.matchingAdUnits[randomIndex];	
}

getMatchingRules = function(userInfo){	
	var matchingRules = [];
	
	for (i = 0; i < rules.length; i++){
		var rule = rules[i];
		var score = getRuleScore(rule, userInfo);
		if (score > 0) {
			rule.score = score;
			matchingRules.push(rule);
		}
    }
	
	return getLowestLevelRules(matchingRules);
}

getLowestLevelRules = function(rules){
	var lowestLevel 		= NO_LEVEL_SET;
	var lowestLevelRules 	= [];
	
	for (i = 0; i < rules.length; i++){
		var rule = rules[i];
		var ruleLevel = rule.level;
		
		if (ruleLevel <= lowestLevel){			
			if (ruleLevel < lowestLevel){
				lowestLevel 		= ruleLevel;
				lowestLevelRules 	= [];
			}
			
			lowestLevelRules.push(rule);
		}
	}
	
	return lowestLevelRules;	
}

getHighestScoreRule = function(matchingRules){
	var highestScoreRules = getHighestScoreRules(matchingRules);
	
	return getRandomRule(highestScoreRules);
}

getHighestScoreRules = function(matchingRules){
	var highestScore 		= 0;
	var highestScoreRules 	= [];
	
	for (i = 0; i < matchingRules.length; i++){
		var rule = matchingRules[i];
		var score = rule.score;
		
		if (score >= highestScore){			
			if (score > highestScore){
				highestScore 		= score;
				highestScoreRules 	= [];
			}
			
			highestScoreRules.push(rule);
		}
	}
	
	return highestScoreRules;
}

getRandomRule = function(highestScoreRules){
	var ruleBoundries     = {};
	var percentageCovered = 0;
	
	for (i = 0; i < highestScoreRules.length; i++){
			var rule						= highestScoreRules[i];
			var from 						= (percentageCovered + 1);
			var to 							= percentageCovered + rule.percentage;
			ruleBoundries[rule.ruleUUID]	= {from:from , to:to, rule: rule};
			
			percentageCovered 				+= rule.percentage;
	}
	
	if (percentageCovered < 100)
		percentageCovered = 100;
	
	var randomNumber = Math.floor(Math.random() * percentageCovered) + 1
	
	for (ruleID in ruleBoundries){
		if (randomNumber >= ruleBoundries[ruleID].from && randomNumber <= ruleBoundries[ruleID].to)
		  return ruleBoundries[ruleID].rule;
	}
	
	return null;
}

getRuleScore = function(rule, userInfo){	
	var platformScore	= getPlatformScore(rule, userInfo);
	var visibleScore 	= getVisibilityScore(rule, userInfo);
	var countryScore 	= getCountryScore(rule, userInfo);
	
	var scoreSum    	= platformScore + visibleScore + countryScore; 
	
	return scoreSum;
}

getCountryScore = function(rule, userInfo){
	if (rule.countries.length == 0 || userInfo.country == '')
	   return SCORE_NONE;
	
	var isCountryContainedInRule 	= (rule.countries.indexOf(userInfo.country) != -1);
	var isCountryMatching 			= ( (rule.includeCountries && isCountryContainedInRule) || (!rule.includeCountries && !isCountryContainedInRule) );
	
	return (isCountryMatching) ? SCORE_MATCH : SCORE_NO_MATCH;
}

getVisibilityScore = function(rule, userInfo){
	if (rule.visibleFrom <= 0 && rule.visibleTo <= 0)
	  return SCORE_NONE;
	
	var isFromMatching 	= (userInfo.impressions >= rule.visibleFrom);
	var isToMatching 	= (rule.visibleTo <= 0) || (userInfo.impressions <= rule.visibleTo);	
	
	return (isFromMatching && isToMatching) ? SCORE_MATCH : SCORE_NO_MATCH;
}

getPlatformScore = function(rule, userInfo){
	var isPlatformMatching = ( (rule.platform == "Both") || (rule.platform == userInfo.platform) );
	
	return (isPlatformMatching) ? SCORE_MATCH : SCORE_NO_MATCH;
}

getImpressions = function(){
	var impressionsFromCookie = readCookie(TAG_IMPRESSIONS_COOKIE_NAME);
	var impressions			  = (impressionsFromCookie != null) ? impressionsFromCookie : 0;
	
	createCookie(TAG_IMPRESSIONS_COOKIE_NAME, ++impressions, 24);
	console.log("TM Impressions: " + impressions);
	
	return impressions;
}

createCookie = function(name, value, hours) {
	var expires = readCookie(TAG_IMPRESSIONS_EXP_DATE_COOKIE_NAME);		
	if (expires == null){
		var date = new Date();
		date.setTime(date.getTime() + (hours*60*60*1000));
		expires = date.toGMTString();
	}
	 
	document.cookie = name + "=" + value + "; expires=" + expires + "; path=/";
	document.cookie = TAG_IMPRESSIONS_EXP_DATE_COOKIE_NAME + "=" + expires + "; expires=" + expires + "; path=/";
}

readCookie = function(name) {
	var nameEQ 	= name + "=";
	var ca 		= document.cookie.split(';');
	for(var i=0; i < ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1,c.length);
		if (c.indexOf(nameEQ) == 0)	return c.substring(nameEQ.length,c.length);
	}
	
	return null;
}	
	processHTML = function(adUnit) {
		 var html = adUnit.html;
		 
		 html = processParam(html, 'width', adUnit.width); 
		 html = processParam(html, 'height', adUnit.height); 
		 html = processParam(html, 'sourceURL', ""); 
		 html = processParam(html, 'clickURL', ""); 
		 html = processParam(html, 'clickThroughURL', ""); 
		 html = processParam(html, 'pageTitle', ""); 
		 html = processParam(html, 'timeStamp', timeStamp); 
		 html = processParam(html, 'cacheBuster', ""); 
		 
		 return html;
	}

	processParam = function(html, name, value) {
		 var paramName = '{{' + name + '}}';
		 
		 if (html.indexOf(paramName) >= 0) {
			var paramValue = getParameter(name); 
			if (paramValue.length == 0) {
				paramValue = (typeof MTagParams === 'undefined') ? '' : MTagParams[name];
				if (paramValue == undefined || paramValue.length == 0)
				  paramValue = value;
			}
			
			html = html.replace(new RegExp(paramName, 'g'), paramValue);
		}
	 
		return html;
	}
		
	this.generate = function() {
		var choiceInfo = {
			adUnitUUID: ( isMobile() ) ? 'fd7e874d-022a-4953-9199-9b1820e8704b' : 'fd7e874d-022a-4953-9199-9b1820e8704b',
			ruleUUID: ''
		};
		
				   choiceInfo = chooseAdUnit(choiceInfo);
		
		var adUnit	= adUnits[choiceInfo.adUnitUUID];
		var html 	= processHTML(adUnit);
		writeHTML(html);
		
		addPixel(adUnit.impressionsURL + "&rid=" + choiceInfo.ruleUUID + '&did=' + adUnit.domain + '&cb=' + timeStamp);
	}
	
	return this;
}

(function(){
	var mTagGen = new MTagGen();
	mTagGen.generate();
})();

