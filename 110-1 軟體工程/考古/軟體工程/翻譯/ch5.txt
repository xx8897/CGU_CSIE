CH5 Understanding Requirements 了解需求

★＊Requirements Engineering 需求工程
-Inception(初始)：問一系列建工的問題
  -對這個問題的基本認識
  -誰想解決問題
  -解決方案的性質是被需要的
  -客戶與開發者間的初步溝通，合作的有效性
-Elicitation(誘導)：徵求所有利益相關者的需求
-Elaboration(詳細闡述)：建立可確定數據、功能、行為的需求分析模型
-Negotiation(談判)：討論對開發者與客戶實際的交付系統
-Specification(規格)：
  -書面文件
  -一組模型
  -正規的數學
  -使用者方案的收集
  -prototype(原型)
-Validation(驗證)：一個審查機制
  -內容or解釋上的錯誤
  -澄清需要澄清的部分
  -漏掉的訊息
  -一致姓
  -相互衝突or不切實際的需求
-Requirements management 需求管理

＊Inception
-確認利益相關者
-認可多方觀點
-以合作為目標
-初始問題
  -提出工作要求的人?
  -誰會使用解決方法?
  -成功解決方法帶來的經濟效益是什麼?
  -是否還需要其他來源的解決方法?

★＊Eliciting Requirements 誘導需求
-meeting是由軟體工程師和客戶出席和舉辦
-建立籌備和參予的規則
-一個建議的議程
-有人促進會議
-定義機制(可以是工作單、海報、聊天室)
-目標
  -找出問題
  -提出解決方案的要素
  -以不同的方案談判
  -指定一套初步的解決方案需求

＊Quality Function Deployment 品質機能配置
-功能配置：確定系統中每個功能的價值
-訊息配置：確定資料物件和事件
-任務配置：檢查系統的行為
-價值分析：決定需求的相對優先權

★＊Elicitation Work Products 誘導式工作產品
-需求和可行性聲明
-有範圍的發言，限於系統or產品
-要有消費者、使用者、利益相關者的名單
-該系統技術環境的描述
-需求列表和每個領域的限制
-要使用情境以深入了解不同操作條件下該如何使用系統和產品
-原型開發能助於定義需求

★＊Buiding the Analysis Model 建構分析模型
-基於方案
  -Functional：處理軟體功能的描述
  -Use-Cases：描述actor和系統的互動
-基於類別：由方案隱含
-行為：狀態圖
-流程導向：數據流程圖

＊Use-Cases
-使用者方案的結合，描述系統的使用線程
-每個方案都由一個actor的觀點描述
-每個actor要回答下列問題
  -誰是主要、次要actor?
  -actor的目標?
  -開始前要具備哪些前提?
  -actor的主要任務和功用?
  -描述方案時有什麼是可考慮擴展的?
  -與actor互動時有什麼變化的可能?
  -哪些系統資訊是actor可獲取、產生、改變的?
  -actor會通知系統外部環境的變化嗎?
  -什麼資訊是actor想從系統中得到的?
  -actor會希望被告知意外的變化嗎?

＊Analysis Patterns 分析模式
-Pattern name：抓住模式精髓的描述
-Intent：描述模式能完成or代表什麼
-Motivation：說明如何使用pattren來解決問題的方案
-Forces and Context：如何使用pattern和使用pattern能解決什麼外部的問題
-Solution：描述pattern如何解決問題，重點在於結構和行為議題的描述
-Consequence：描述Pattern後會發生什麼，取捨後剩什麼
-Design：討論分析pattern如何藉由使用已知pattern來達成
-Known uses：實際系統中應該的例子
-Related Pattern：一個or多個pattern和指定pattern是相似的
  -彼此很常用到
  -彼此結構相似
  -是變形

＊Negotiation Requirements 談判要求
-確認關鍵利益相關者
-確認每個利益相關者的"雙贏條件"
-交涉：以要求雙贏為前提下工作

＊Validating Requirement
-系統/產品的要求都和總體目標一致?
-是否所有要求到在適當的抽象水平?
-要求是必須的還是代表一個附加的功能?
-需求都是有原因的嗎?
-有互相衝突的需求嗎?
-每個在技術環境中達到的要求都能建立出系統or產品?
-每個要求都能測試、落實?
-需求模型是否反映出要建構系統的信息、功能、行為?
-需求模型有被分區以便了解有關系統得更多訊息?
-已使用需求pattern來簡化需求model?，以正確驗證?有符合客戶要求?
